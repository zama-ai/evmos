name: Run e2e test

on:
  workflow_dispatch:
    inputs:
      evmos_node_tag:
        description: 'Evmos node image tag (default: latest)'
        type: string
        required: false
      oracle_db_service_tag:
        description: 'Oracle Db service image tag (default: latest)'
        type: string
        required: false
      ref_to_zbc_solidity:
        description: 'Branch, tag or commit SHA1 to checkout zbc-solidity'
        required: true
        default: "feature/test-m1"
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      EVMOS_NODE_TAG: ${{ inputs.evmos_node_tag }}
      ORACLE_DB_SERVICE_TAG: ${{ inputs.oracle_db_service_tag }}
      LOCAL_BUILD: "false"
    steps:
      - name: Echo user parameters 
        run: |
          echo "evmos_node_tag: ${{ inputs.evmos_node_tag }}"
          echo "oracle_db_service_tag: ${{ inputs.oracle_db_service_tag }}"
          echo "ref_to_zbc_solidity: ${{ inputs.ref_to_zbc_solidity }}"

      - name: Install npm
        run: |
          sudo apt update
          sudo apt install npm

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: evmos

      - name: Update .env to trigger build from registry
        working-directory: ./evmos
        run: |
          sed -i 's/LOCAL_BUILD=true/LOCAL_BUILD=false/g' .env
          grep LOCAL_BUILD .env


      - name: Checkout zbc-solidity
        uses: actions/checkout@v3
        with:
          repository: zama-ai/zbc-solidity
          token: ${{ secrets.CONCRETE_ACTIONS_TOKEN }}
          path: ./evmos/work_dir/zbc-solidity
          ref: ${{ inputs.ref_to_zbc_solidity }}

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@ef93a73b1313f148011965ef7361f667f371f58b
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Download keys from S3
        working-directory: ./evmos
        env:
          AWS_S3_BUCKET: zbc-testnet
        run: |
          aws s3 ls s3://${AWS_S3_BUCKET}
          ./scripts/prepare_volumes_validator_ci.sh

      - name: Prepare files for node setup
        working-directory: ./evmos
        run: |
          mkdir -p node/evmos
          cp ../evmos/private.ed25519 node/evmos 
          cp ../evmos/public.ed25519 node/evmos 
          touch vm.log
          ls node/evmos

      - name: List files in volumes
        working-directory: ./evmos
        run: |
          ls volumes

      - name: Login to GitHub Container Registry
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Prepare evmos node aka run setup.sh
        working-directory: ./evmos
        run: |
          docker compose -f docker-compose/docker-compose.validator.yml run validator bash /config/setup.sh
      

      - name: Check running node owner and change it 
        working-directory: ./evmos
        run: |
          ls -all .
          sudo chown -R $USER: running_node/

      - name: Prepare keys
        working-directory: ./evmos
        run: |
          ./scripts/prepare_validator_ci.sh
      
      - name: Start whole testnet
        working-directory: ./evmos
        run: |
          docker compose  -f docker-compose/docker-compose.validator.yml -f docker-compose/docker-compose.validator.override.yml  up --detach

      - name: Check running docker
        run: |
          docker ps

      - name: Sleep for 3 seconds to ensure validtor is running
        run: |
          sleep 5s
          
      - name: List files in zbc-solidity
        working-directory: evmos/work_dir/zbc-solidity
        run: |
          ls

      - name: Prepare/download fhe keys
        working-directory: evmos/work_dir/zbc-solidity
        run: |
          ./ci/scripts/prepare_fhe_keys_ci.sh

      - name: Install @openzeppelin/contracts
        working-directory: evmos/work_dir/zbc-solidity
        run: |
          npm install @openzeppelin/contracts

      - name: Run e2e test from zbc-solidty
        working-directory: evmos/work_dir/zbc-solidity
        run: |
          ./ci/scripts/run_ERC20_ci_test.sh mykey1 ../../